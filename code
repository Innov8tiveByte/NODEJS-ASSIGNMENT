const axios = require('axios');

// Replace with your API endpoint
const apiUrl = 'https://your-api-endpoint.com';

// Task 1: Get the book list available in the shop
async function getBookList() {
  try {
    const response = await axios.get(`${apiUrl}/books`);
    return response.data;
  } catch (error) {
    throw error;
  }
}

// Task 2: Get the books based on ISBN
async function getBooksByISBN(isbn) {
  try {
    const response = await axios.get(`${apiUrl}/books/isbn/${isbn}`);
    return response.data;
  } catch (error) {
    throw error;
  }
}

// Task 3: Get all books by Author
async function getBooksByAuthor(author) {
  try {
    const response = await axios.get(`${apiUrl}/books/author/${author}`);
    return response.data;
  } catch (error) {
    throw error;
  }
}

// Task 4: Get all books based on Title
async function getBooksByTitle(title) {
  try {
    const response = await axios.get(`${apiUrl}/books/title/${title}`);
    return response.data;
  } catch (error) {
    throw error;
  }
}

// You can define additional functions for tasks 5 to 9 here if needed.

// Task 10: Get all books - Using async callback function
async function getAllBooksAsyncCallback(callback) {
  try {
    const response = await axios.get(`${apiUrl}/books`);
    callback(null, response.data);
  } catch (error) {
    callback(error, null);
  }
}

// Task 11: Search by ISBN - Using Promises
function searchByISBN(isbn) {
  return axios.get(`${apiUrl}/books/isbn/${isbn}`)
    .then(response => response.data)
    .catch(error => {
      throw error;
    });
}

// Task 12: Search by Author
async function searchByAuthor(author) {
  try {
    const response = await axios.get(`${apiUrl}/books/author/${author}`);
    return response.data;
  } catch (error) {
    throw error;
  }
}

// Task 13: Search by Title
async function searchByTitle(title) {
  try {
    const response = await axios.get(`${apiUrl}/books/title/${title}`);
    return response.data;
  } catch (error) {
    throw error;
  }
}
